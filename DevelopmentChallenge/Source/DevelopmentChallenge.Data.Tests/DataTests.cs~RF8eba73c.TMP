using System;
using System.Collections.Generic;
using DevelopmentChallenge.Data.Classes;
using NUnit.Framework;

namespace DevelopmentChallenge.Data.Tests
{
    public abstract class DataTests
    {
        protected List<FormaGeometrica> Formas { get; set; }

        protected abstract int Idioma { get; }
        protected Reporte Reporte { get; set; }

        protected DataTests()
        {
            Formas = new List<FormaGeometrica>();
            Reporte = new Reporte();
        }

        [SetUp]
        public void Setup()
        {
            ConfigurarFormas();
        }

        protected abstract void ConfigurarFormas();
    }

    [TestFixture]
    public class DataTestsCastellano : DataTests
    {
        protected override int Idioma => FormaGeometrica.Castellano;

        protected override void ConfigurarFormas()
        {
          Formas.Add(new Cuadrado(5));         
        }

        [TestCase]
        public void TestResumenListaVacia()
        {
            Assert.AreEqual("<h1>Lista vacía de formas!</h1>", Reporte.Imprimir(new List<FormaGeometrica>(), Idioma));
        }

        [TestCase]
        public void TestResumenListaConUnCuadrado()
        {
            var resumen = Reporte.Imprimir(Formas, Idioma);

            Assert.AreEqual("<h1>Reporte de Formas</h1>1 Cuadrado | Area 25 | Perimetro 20 <br/>TOTAL:<br/>1 formas Perimetro 20 Area 25", resumen);
        }
    }

    [TestFixture]
    public class DataTestsIngles : DataTests
    {
        protected override int Idioma => FormaGeometrica.Ingles;

        protected override void ConfigurarFormas()
        {
            Formas.Add(new Cuadrado(5));
        }

        [TestCase]
        public void TestResumenListaVaciaFormasEnIngles()
        {
            Assert.AreEqual("<h1>Lista vacía de formas!</h1>", Reporte.Imprimir(new List<FormaGeometrica>(), Idioma));
        }

    }

    [TestFixture]
    public class DataTestsITaliano : DataTests
    {
        protected override int Idioma => FormaGeometrica.Italiano;

        protected override void ConfigurarFormas()
        {
            Formas.Add(new Cuadrado(5));
        }

        [TestCase]
        public void TestResumenListaVaciaFormasEnITaliano()
        {
            Assert.AreEqual("<h1>Lista vacía de formas!</h1>", Reporte.Imprimir(new List<FormaGeometrica>(), Idioma));
        }

    }

    //[TestCase]
    //    public void TestResumenListaConMasCuadrados()
    //    {
    //        var cuadrados = new List<FormaGeometrica>
    //        {
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 5),
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 1),
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 3)
    //        };

    //        var resumen = FormaGeometrica.Imprimir(cuadrados, FormaGeometrica.Ingles);

    //        Assert.AreEqual("<h1>Shapes report</h1>3 Squares | Area 35 | Perimeter 36 <br/>TOTAL:<br/>3 shapes Perimeter 36 Area 35", resumen);
    //    }

    //    [TestCase]
    //    public void TestResumenListaConMasTipos()
    //    {
    //        var formas = new List<FormaGeometrica>
    //        {
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 5),
    //            new FormaGeometrica(FormaGeometrica.Circulo, 3),
    //            new FormaGeometrica(FormaGeometrica.TrianguloEquilatero, 4),
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 2),
    //            new FormaGeometrica(FormaGeometrica.TrianguloEquilatero, 9),
    //            new FormaGeometrica(FormaGeometrica.Circulo, 2.75m),
    //            new FormaGeometrica(FormaGeometrica.TrianguloEquilatero, 4.2m)
    //        };

    //        var resumen = FormaGeometrica.Imprimir(formas, FormaGeometrica.Ingles);

    //        Assert.AreEqual(
    //            "<h1>Shapes report</h1>2 Squares | Area 29 | Perimeter 28 <br/>2 Circles | Area 13,01 | Perimeter 18,06 <br/>3 Triangles | Area 49,64 | Perimeter 51,6 <br/>TOTAL:<br/>7 shapes Perimeter 97,66 Area 91,65",
    //            resumen);
    //    }

    //    [TestCase]
    //    public void TestResumenListaConMasTiposEnCastellano()
    //    {
    //        var formas = new List<FormaGeometrica>
    //        {
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 5),
    //            new FormaGeometrica(FormaGeometrica.Circulo, 3),
    //            new FormaGeometrica(FormaGeometrica.TrianguloEquilatero, 4),
    //            new FormaGeometrica(FormaGeometrica.Cuadrado, 2),
    //            new FormaGeometrica(FormaGeometrica.TrianguloEquilatero, 9),
    //            new FormaGeometrica(FormaGeometrica.Circulo, 2.75m),
    //            new FormaGeometrica(FormaGeometrica.TrianguloEquilatero, 4.2m)
    //        };

    //        var resumen = FormaGeometrica.Imprimir(formas, FormaGeometrica.Castellano);

    //        Assert.AreEqual(
    //            "<h1>Reporte de Formas</h1>2 Cuadrados | Area 29 | Perimetro 28 <br/>2 Círculos | Area 13,01 | Perimetro 18,06 <br/>3 Triángulos | Area 49,64 | Perimetro 51,6 <br/>TOTAL:<br/>7 formas Perimetro 97,66 Area 91,65",
    //            resumen);
    //    }
    
}
